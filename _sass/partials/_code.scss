$code_font: $font-mono;
$code_text: $color_dark_on_light;
$code_background: $color_shadow_light;
$code_keyword: $color_main;
$code_comment: $color_shadow_dark;
$code_literal: $color_main_dark;

// blocks
code, pre {
    font-family: $code_font;
    color: $code_text;
    background-color: $code_background;
    border-radius: .25rem;
    font-size: .85rem;
}

code {
    padding: .25em .5em;
}

pre {
    padding: .5rem .75rem;
    overflow: auto;
    
    code {
        padding: 0;
    }
}

.highlight {
    margin: 0;
}

// syntax
.highlight .hll { background-color: $code_background }
.highlight .err { border: 1px solid red } // error
.highlight .c { color: $code_comment } // comment
.highlight .cm { color: $code_comment } // comment multi-line
.highlight .cp { color: $code_keyword } // comment pre-proc
.highlight .c1 { color: $code_comment } // comment single
.highlight .cs { color: $code_comment } // comment special
.highlight .ge { font-style: italic } // generic emph
.highlight .gh { font-weight: bold } // generic heading
.highlight .gp { font-weight: bold } // generic prompt
.highlight .gs { font-weight: bold } // generic strong
.highlight .gu { font-weight: bold } // generic subheading
.highlight .k { color: $code_keyword } // keyword
.highlight .kc { color: $code_keyword } // keyword constant
.highlight .kd { color: $code_keyword } // keyword declaration
.highlight .kn { color: $code_keyword } // keyword namespace
.highlight .kp { color: $code_keyword } // keyword pseudo
.highlight .kr { color: $code_keyword } // keyword reserved
.highlight .kt { color: $code_keyword } // keyword type
.highlight .nc { color: $code_keyword } // name class
.highlight .ow { color: $code_keyword } // operator word
.highlight .s { color: $code_literal } // literal string
.highlight .sb { color: $code_literal } // literal string backtick
.highlight .sc { color: $code_literal } // literal string char
.highlight .sd { color: $code_literal } // literal string doc
.highlight .s2 { color: $code_literal } // literal string double
.highlight .se { color: $code_literal } // literal string escape
.highlight .sh { color: $code_literal } // literal string heredoc
.highlight .si { color: $code_literal } // literal string interpol
.highlight .sx { color: $code_literal } // literal string other
.highlight .sr { color: $code_literal } // literal string regex
.highlight .s1 { color: $code_literal } // literal string single
.highlight .ss { color: $code_literal } // literal string symbol
