
html {
    font-family: $font-serif;
    background: repeating-linear-gradient(
        -55deg,
        $color_dark_on_light,
        $color_dark_on_light 10px,
        mix(black, $color_dark_on_light, 10%) 10px,
        mix(black, $color_dark_on_light, 10%) 20px
    );
    background-color: $color_dark_on_light;
}

a {
    text-decoration: none;
    color: inherit;
}

h1 { font-size: 2rem; }
h2 { font-size: 1.5rem; }
h3 { font-size: 1.25rem; }

.main {
    background-color: $color_light_on_dark;
    color: $color_dark_on_light;
    
    #comments {
        border-top: 1px solid $color_shadow_light;    
    }
    
    h1, h2, h3, h4, h5, h6 {
        font-family: $font-sans;
        
        a {
            color: $color_dark_on_light;

            &:hover, &:focus {
                color: $color_main;
            }
        }
    }

    a {
        color: $color_main;

        &:hover, &:focus {
            color: $color_main_light;    
        }
    }

    p {
        line-height: 1.5rem;
    }
        
    dl {
        font-size: .9rem;
        
        dt {
            font-size: 1rem;
            font-weight: bold;
        }
        
        dd {
            margin-bottom: .5em;
        }
    }

    li::marker {
        font-size: .8em;
        color: $color_main;
    }

    abbr {
        font-weight: bold;
        text-transform: uppercase;
        cursor: help;
    }

    q, blockquote {
        font-style: italic;
        quotes: "“" "”" "‘" "’";

        &::before, &::after {
            color: $color_main;
        }

        &::before {
            content: open-quote;
        }
    
        &::after {
            content: close-quote;
        }
    }

    q::before, q::after {
        line-height: .1em;
        vertical-align: -.2em;
        font-size: 1.5em;
        font-style: normal;
    }

    blockquote {
        position: relative;

        &::before, &::after {
            position: absolute;
            line-height: 1em;
            font-size: 4em;
        }

        &::before {
            left: -.8em;
        }

        &::after {
            right: 0;
            bottom: -.5em;
        }
    }

    cite:before {
        content: '\2014\00A0';
    }

    p cite {
        display: block;
        text-align: right;
        margin-top: -.5rem;
        font-size: .9rem;
    }

    table {
        width: 100%;
        font-size: .9em;
        font-family: $font-sans;
        border: 1px solid $color_dark_on_light;
        border-collapse: collapse;
        margin-bottom: 1rem;

        thead {
            background-color: $color_main;
            color: $color_light_on_dark;
        }

        td, th {
            padding: .25rem .5rem;
            border: 1px solid $color_dark_on_light;
        }

        th {
            text-align: left;
        }
    }

    img {
        max-width: 100%;
        height: auto;
        display: block;
        margin: 0 0 1rem;
    }

    sup {
        line-height: 0;
    }
    
    article + * {
        border-top: medium dashed $color_shadow_light;
        margin-top: 2rem;
    }
}

.footnotes {
    font-size: .85rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
}

.side {
    font-family: $font-sans;
    font-size: .9rem;
    color: $color_light_on_dark;

    a {
        color: $color_main;

        &:hover, &:focus {
            color: $color_main_light;
        }
    }

    .bio-img {
        max-width: 10rem;
        border-radius: 10rem;
    }

    .feed {
        padding-left: 17px;
        background: url("#{$img_path}/feed-icon.png") no-repeat 0 50%;
    }

    footer {
        font-family: $font-serif;
        font-size: .8rem;
        font-style: italic;
    }
}

.archive {
    ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    h5 {
        border-bottom: solid 1px $color_shadow_light;
    }
}

.post-meta {
    font-family: $font-sans;
    font-size: .8rem;
    color: $color_shadow_dark;
    text-transform: uppercase;
    border-bottom: solid 1px $color_shadow_light;

    a {
        color: inherit;
        margin: 0 .1em;
        
        &:hover, &:focus {
            color: $color_main;
        }
    }
}

.comment-list {
    margin: 1rem 0;

    .comment-item {
        display: flex;
        align-items: flex-start;
        padding: 1rem 0 0;
        border-top: solid 1px $color_shadow_light;
    }

    .comment-avatar {
        flex-shrink: 0;
        border-radius: 50px;
        max-width: 50px;
        margin: 0 1rem;

        @media only screen and (max-width: 40rem) {
            margin: 0 .5rem;
        }
    }

    .comment-meta {
        font-family: $font-sans;
        font-size: .85rem;

        strong {
            font-size: .9rem;
        }
    }
}

.bad {
    font-family: $font-mono;
    text-align: center;

    h1 {
        font-family: inherit;
        font-size: 6rem;
        line-height: 1;
    }

    p:nth-child(even) {
        transform: rotate(-3deg);
    }

    p:nth-child(odd) {
        transform: rotate(1deg);
    }

    .glitch {
        position: relative;
        animation: distort .5s infinite linear alternate-reverse;

        &::after {
            content: attr(data-text);
            position: absolute;
            overflow: hidden;
            width: 100%;
            height: 100%;
            top: 0;
            left: -2px;
            color: blue;
            text-shadow: -2px 0 cyan, 2px 2px fuchsia;
            animation: noise 2s infinite linear alternate-reverse;
        }

        @keyframes distort {
            $steps: 20;
            @for $i from 0 to 10 {
                #{percentage($i * (1 / $steps))} {
                    $val: random(5);
                    transform: skew(#{$val}deg);
                }
            }
        }

        @keyframes noise {
            $steps: 20;
            @for $i from 0 to $steps {
                #{percentage($i * (1 / $steps))} {
                    $top: random(100);
                    $bottom: random(101 - $top);
                    $skew: random();
                    
                    clip-path: inset(#{$top}% 0 #{$bottom}% 0);
                    transform: skew(#{$skew}deg);
                }
            }
        }
    }
}
